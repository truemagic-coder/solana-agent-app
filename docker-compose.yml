version: '3.8'

services:
  # MongoDB for Solana Agent storage
  mongodb:
    image: mongo:latest
    container_name: solana-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=solana
      - MONGO_INITDB_ROOT_PASSWORD=solanapassword
    networks:
      - solana_network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Qdrant vector database for embeddings
  qdrant:
    image: qdrant/qdrant:latest
    container_name: solana-qdrant
    ports:
      - "6333:6333"
      - "6334:6334" # For REST API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__TELEMETRY_ENABLED=false
    networks:
      - solana_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Zep service
  zep:
    image: zepai/zep:latest
    container_name: solana-zep
    ports:
      - "8000:8000"
    volumes:
      - ./zep.yaml:/app/zep.yaml
    environment:
      - ZEP_CONFIG_FILE=zep.yaml
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
    networks:
      - solana_network
    depends_on:
      graphiti:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # PostgreSQL database for Zep
  db:
    image: ankane/pgvector:v0.5.1
    container_name: solana-zep-postgres
    restart: on-failure
    shm_size: "128mb"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - solana_network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - zep-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Graphiti for graph processing
  graphiti:
    image: zepai/graphiti:0.3
    container_name: solana-graphiti
    ports:
      - "8003:8003"
    networks:
      - solana_network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8003/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - MODEL_NAME=gpt-4o-mini
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=zepzepzep
      - PORT=8003

  # Neo4j database for Graphiti
  neo4j:
    image: neo4j:5.22.0
    container_name: solana-neo4j
    networks:
      - solana_network
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/zepzepzep

networks:
  solana_network:
    name: solana_network
    driver: bridge

volumes:
  mongodb_data:
  qdrant_data:
  zep-db:
  neo4j_data:
